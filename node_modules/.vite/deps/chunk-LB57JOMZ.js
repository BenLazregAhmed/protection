import {
  getTabTransitionComponent,
  useTabPanel
} from "./chunk-BPJ3NWJR.js";
import {
  TabContext_default
} from "./chunk-UF7FEYEU.js";
import {
  SelectableContext_default
} from "./chunk-MUYHYZ7I.js";
import {
  Fade_default
} from "./chunk-W7CHS5E6.js";
import {
  useBootstrapPrefix
} from "./chunk-MNPHM76D.js";
import {
  require_classnames
} from "./chunk-WNXJR7JE.js";
import {
  require_jsx_runtime
} from "./chunk-XUXHEDPB.js";
import {
  require_react
} from "./chunk-YSDLPTTY.js";
import {
  __toESM
} from "./chunk-ZS7NZCD4.js";

// node_modules/react-bootstrap/esm/TabContent.js
var React = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var TabContent = React.forwardRef(({
  className,
  bsPrefix,
  as: Component = "div",
  ...props
}, ref) => {
  bsPrefix = useBootstrapPrefix(bsPrefix, "tab-content");
  return (0, import_jsx_runtime.jsx)(Component, {
    ref,
    className: (0, import_classnames.default)(className, bsPrefix),
    ...props
  });
});
TabContent.displayName = "TabContent";
var TabContent_default = TabContent;

// node_modules/react-bootstrap/esm/TabPane.js
var import_classnames2 = __toESM(require_classnames());
var React2 = __toESM(require_react());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var TabPane = React2.forwardRef(({
  bsPrefix,
  transition,
  ...props
}, ref) => {
  const [{
    className,
    // Need to define the default "as" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595
    as: Component = "div",
    ...rest
  }, {
    isActive,
    onEnter,
    onEntering,
    onEntered,
    onExit,
    onExiting,
    onExited,
    mountOnEnter,
    unmountOnExit,
    transition: Transition = Fade_default
  }] = useTabPanel({
    ...props,
    transition: getTabTransitionComponent(transition)
  });
  const prefix = useBootstrapPrefix(bsPrefix, "tab-pane");
  return (0, import_jsx_runtime2.jsx)(TabContext_default.Provider, {
    value: null,
    children: (0, import_jsx_runtime2.jsx)(SelectableContext_default.Provider, {
      value: null,
      children: (0, import_jsx_runtime2.jsx)(Transition, {
        in: isActive,
        onEnter,
        onEntering,
        onEntered,
        onExit,
        onExiting,
        onExited,
        mountOnEnter,
        unmountOnExit,
        children: (0, import_jsx_runtime2.jsx)(Component, {
          ...rest,
          ref,
          className: (0, import_classnames2.default)(className, prefix, isActive && "active")
        })
      })
    })
  });
});
TabPane.displayName = "TabPane";
var TabPane_default = TabPane;

export {
  TabContent_default,
  TabPane_default
};
//# sourceMappingURL=chunk-LB57JOMZ.js.map
