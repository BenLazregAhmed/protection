{
  "version": 3,
  "sources": ["../../react-bootstrap/esm/NavLink.js", "../../@restart/ui/esm/NavItem.js", "../../@restart/ui/esm/NavContext.js", "../../@restart/hooks/esm/useForceUpdate.js"],
  "sourcesContent": ["\"use client\";\r\n\r\nimport classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport Anchor from '@restart/ui/Anchor';\r\nimport { useNavItem } from '@restart/ui/NavItem';\r\nimport { makeEventKey } from '@restart/ui/SelectableContext';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst NavLink = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  as: Component = Anchor,\r\n  active,\r\n  eventKey,\r\n  disabled = false,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\r\n  const [navItemProps, meta] = useNavItem({\r\n    key: makeEventKey(eventKey, props.href),\r\n    active,\r\n    disabled,\r\n    ...props\r\n  });\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    ...props,\r\n    ...navItemProps,\r\n    ref: ref,\r\n    disabled: disabled,\r\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\r\n  });\r\n});\r\nNavLink.displayName = 'NavLink';\r\nexport default NavLink;", "const _excluded = [\"as\", \"active\", \"eventKey\"];\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport NavContext from './NavContext';\r\nimport SelectableContext, { makeEventKey } from './SelectableContext';\r\nimport Button from './Button';\r\nimport { dataAttr } from './DataKey';\r\nimport TabContext from './TabContext';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport function useNavItem({\r\n  key,\r\n  onClick,\r\n  active,\r\n  id,\r\n  role,\r\n  disabled\r\n}) {\r\n  const parentOnSelect = useContext(SelectableContext);\r\n  const navContext = useContext(NavContext);\r\n  const tabContext = useContext(TabContext);\r\n  let isActive = active;\r\n  const props = {\r\n    role\r\n  };\r\n  if (navContext) {\r\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\r\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\r\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\r\n\r\n    // @ts-ignore\r\n    props[dataAttr('event-key')] = key;\r\n    props.id = contextControllerId || id;\r\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\r\n\r\n    /**\r\n     * Simplified scenario for `mountOnEnter`.\r\n     *\r\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\r\n     * once, it would also complicate the code quite a bit, for very little gain.\r\n     * The following implementation is probably good enough.\r\n     *\r\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\r\n     */\r\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\r\n  }\r\n  if (props.role === 'tab') {\r\n    props['aria-selected'] = isActive;\r\n    if (!isActive) {\r\n      props.tabIndex = -1;\r\n    }\r\n    if (disabled) {\r\n      props.tabIndex = -1;\r\n      props['aria-disabled'] = true;\r\n    }\r\n  }\r\n  props.onClick = useEventCallback(e => {\r\n    if (disabled) return;\r\n    onClick == null ? void 0 : onClick(e);\r\n    if (key == null) {\r\n      return;\r\n    }\r\n    if (parentOnSelect && !e.isPropagationStopped()) {\r\n      parentOnSelect(key, e);\r\n    }\r\n  });\r\n  return [props, {\r\n    isActive\r\n  }];\r\n}\r\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\r\n  let {\r\n      as: Component = Button,\r\n      active,\r\n      eventKey\r\n    } = _ref,\r\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n  const [props, meta] = useNavItem(Object.assign({\r\n    key: makeEventKey(eventKey, options.href),\r\n    active\r\n  }, options));\r\n\r\n  // @ts-ignore\r\n  props[dataAttr('active')] = meta.isActive;\r\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\r\n    ref: ref\r\n  }));\r\n});\r\nNavItem.displayName = 'NavItem';\r\nexport default NavItem;", "import * as React from 'react';\r\nconst NavContext = /*#__PURE__*/React.createContext(null);\r\nNavContext.displayName = 'NavContext';\r\nexport default NavContext;", "import { useReducer } from 'react';\r\n\r\n/**\r\n * Returns a function that triggers a component update. the hook equivalent to\r\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\r\n * is preferable but may be required in some advanced usages of refs for interop or\r\n * when direct DOM manipulation is required.\r\n *\r\n * ```ts\r\n * const forceUpdate = useForceUpdate();\r\n *\r\n * const updateOnClick = useCallback(() => {\r\n *  forceUpdate()\r\n * }, [forceUpdate])\r\n *\r\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\r\n * ```\r\n */\r\nexport default function useForceUpdate() {\r\n  // The toggling state value is designed to defeat React optimizations for skipping\r\n  // updates when they are strictly equal to the last state value\r\n  const [, dispatch] = useReducer(state => !state, false);\r\n  return dispatch;\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,wBAAuB;AACvB,IAAAA,SAAuB;;;ACDvB,IAAAC,SAAuB;AACvB,mBAA2B;;;ACH3B,YAAuB;AACvB,IAAM,aAAgC,oBAAc,IAAI;AACxD,WAAW,cAAc;AACzB,IAAO,qBAAQ;;;ADOf,yBAA4B;AAV5B,IAAM,YAAY,CAAC,MAAM,UAAU,UAAU;AAC7C,SAAS,8BAA8B,QAAQ,UAAU;AAAE,MAAI,UAAU;AAAM,WAAO,CAAC;AAAG,MAAI,SAAS,CAAC;AAAG,MAAI,aAAa,OAAO,KAAK,MAAM;AAAG,MAAI,KAAK;AAAG,OAAK,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAAE,UAAM,WAAW,CAAC;AAAG,QAAI,SAAS,QAAQ,GAAG,KAAK;AAAG;AAAU,WAAO,GAAG,IAAI,OAAO,GAAG;AAAA,EAAG;AAAE,SAAO;AAAQ;AAU3S,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,QAAM,qBAAiB,yBAAW,yBAAiB;AACnD,QAAM,iBAAa,yBAAW,kBAAU;AACxC,QAAM,iBAAa,yBAAW,kBAAU;AACxC,MAAI,WAAW;AACf,QAAM,QAAQ;AAAA,IACZ;AAAA,EACF;AACA,MAAI,YAAY;AACd,QAAI,CAAC,QAAQ,WAAW,SAAS;AAAW,YAAM,OAAO;AACzD,UAAM,sBAAsB,WAAW,gBAAgB,OAAO,OAAO,MAAM,IAAI;AAC/E,UAAM,sBAAsB,WAAW,gBAAgB,OAAO,OAAO,MAAM,IAAI;AAG/E,UAAM,SAAS,WAAW,CAAC,IAAI;AAC/B,UAAM,KAAK,uBAAuB;AAClC,eAAW,UAAU,QAAQ,OAAO,OAAO,WAAW,cAAc,MAAM;AAW1E,QAAI,YAAY,EAAE,cAAc,QAAQ,WAAW,kBAAkB,EAAE,cAAc,QAAQ,WAAW;AAAe,YAAM,eAAe,IAAI;AAAA,EAClJ;AACA,MAAI,MAAM,SAAS,OAAO;AACxB,UAAM,eAAe,IAAI;AACzB,QAAI,CAAC,UAAU;AACb,YAAM,WAAW;AAAA,IACnB;AACA,QAAI,UAAU;AACZ,YAAM,WAAW;AACjB,YAAM,eAAe,IAAI;AAAA,IAC3B;AAAA,EACF;AACA,QAAM,UAAU,iBAAiB,OAAK;AACpC,QAAI;AAAU;AACd,eAAW,OAAO,SAAS,QAAQ,CAAC;AACpC,QAAI,OAAO,MAAM;AACf;AAAA,IACF;AACA,QAAI,kBAAkB,CAAC,EAAE,qBAAqB,GAAG;AAC/C,qBAAe,KAAK,CAAC;AAAA,IACvB;AAAA,EACF,CAAC;AACD,SAAO,CAAC,OAAO;AAAA,IACb;AAAA,EACF,CAAC;AACH;AACA,IAAM,UAA6B,kBAAW,CAAC,MAAM,QAAQ;AAC3D,MAAI;AAAA,IACA,IAAI,YAAY;AAAA,IAChB;AAAA,IACA;AAAA,EACF,IAAI,MACJ,UAAU,8BAA8B,MAAM,SAAS;AACzD,QAAM,CAAC,OAAO,IAAI,IAAI,WAAW,OAAO,OAAO;AAAA,IAC7C,KAAK,aAAa,UAAU,QAAQ,IAAI;AAAA,IACxC;AAAA,EACF,GAAG,OAAO,CAAC;AAGX,QAAM,SAAS,QAAQ,CAAC,IAAI,KAAK;AACjC,aAAoB,mBAAAC,KAAK,WAAW,OAAO,OAAO,CAAC,GAAG,SAAS,OAAO;AAAA,IACpE;AAAA,EACF,CAAC,CAAC;AACJ,CAAC;AACD,QAAQ,cAAc;AACtB,IAAO,kBAAQ;;;ADlFf,IAAAC,sBAA4B;AAC5B,IAAM,UAA6B,kBAAW,CAAC;AAAA,EAC7C;AAAA,EACA;AAAA,EACA,IAAI,YAAY;AAAA,EAChB;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,GAAG;AACL,GAAG,QAAQ;AACT,aAAW,mBAAmB,UAAU,UAAU;AAClD,QAAM,CAAC,cAAc,IAAI,IAAI,WAAW;AAAA,IACtC,KAAK,aAAa,UAAU,MAAM,IAAI;AAAA,IACtC;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACD,aAAoB,oBAAAC,KAAK,WAAW;AAAA,IAClC,GAAG;AAAA,IACH,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,eAAW,kBAAAC,SAAW,WAAW,UAAU,YAAY,YAAY,KAAK,YAAY,QAAQ;AAAA,EAC9F,CAAC;AACH,CAAC;AACD,QAAQ,cAAc;AACtB,IAAO,kBAAQ;;;AGlCf,IAAAC,gBAA2B;AAkBZ,SAAR,iBAAkC;AAGvC,QAAM,CAAC,EAAE,QAAQ,QAAI,0BAAW,WAAS,CAAC,OAAO,KAAK;AACtD,SAAO;AACT;",
  "names": ["React", "React", "_jsx", "import_jsx_runtime", "_jsx", "classNames", "import_react"]
}
